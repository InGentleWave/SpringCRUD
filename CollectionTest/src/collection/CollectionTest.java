package collection;

public class CollectionTest {
	// ### COLLECTION TEST
	// ### Collection의 종류로는 List, Set, Map이 있다.
	// ### Collection의 종류를 자유자재로 활용할 수 있다면 당신은 CRUD는 식은죽 먹기다!
	// ### 자! 그럼 Collection 관련 문제 100문제를 풀고 Collection 마스터가 되어보자!
	
	// List 문제
	// 1) 모든 타입의 데이터를 담을 List를 만들어주세요. (변수명은 list로 작성하세요.)
	// 2) list에 데이터 5개를 넣어주세요. (각각 다른 타입의 데이터를 넣어주세요.)
	// 3) list에 등록된 데이터 모두를 출력해주세요.
	// 4) list에 index가 짝수번째인 데이터 모두를 "짝수"라는 문자열로 변경해주세요.
	// 5) list에 등록된 데이터 모두를 출력해주세요.
	// 6) list에 등록된 데이터 중, index 3번째에 해당하는 데이터를 삭제해주세요.
	// 7) 현재 등록되어 있는 list의 사이즈를 출력해주세요.
	// 8) list의 "추가"라는 문자열 데이터를 추가해주세요.
	// 9) list의 등록된 데이터 모두를 출력해주세요.
	// 10) list의 index 3번째에 해당하는 값을 출력해주세요.
	// 11) list의 index가 홀수번째인 데이터를 null로 수정해주세요.
	// 12) list의 등록된 데이터 모두를 출력해주세요.
	// 13) list의 데이터들 중, 두번째 null 데이터가 포함되어 있는 index를 출력해주세요.
	// 14) list의 모든 데이터를 삭제해주세요.
	// 15) list의 등록된 데이터 모두를 출력해주세요.
	// 16) list의 사이즈를 출력해주세요.
	// 17) list의 데이터를 2개 추가해주세요.
	// 18) list의 index 0,2번째에 데이터를 넣어주세요.
	// 19) list의 마지막 데이터를 삭제해주세요.
	// 20) list의 등록된 데이터 모두를 출력해주세요.
	// 21) list의 타입을 문자열만 담을 수 있는 ArrayList로 생성해주세요.
	// 22) list의 5개의 데이터를 넣어주세요.
	// 23) list의 짝수번째 데이터를 '(짝수)'라는 문자와 합쳐서 넣어주세요.
	// ex ) (짝수)1, (짝수)3, (짝수)5 
	// 24) list의 모든 데이터를 출력해주세요.
	// 25) list의 index가 홀수번째인 데이터 모두를 삭제해주세요.
	// 26) list의 마지막 index의 데이터를 출력해주세요.
	// 27) list의 본인의 이름을 추가해주세요.
	// 28) list의 본인 이름이 추가된 index를 출력해주세요.
	// 29) list의 모든 데이터를 삭제하고, 
	// index 0번째는 '#본인의 이름'
	// index 1번째는 '#열심히 공부하자'
	// index 2번째는 '#열심히 연습하자' 를 추가해주세요.
	// 30) list의 모든 데이터를 출력해주세요!
	// 31) List는 인터페이스인가요? 클래스인가요? (출력문으로 정답을 출력하세요.) 
	// 32) List의 종류는 어떤것들이 있나요? (출력문으로 정답을 출력하세요.)
	// 33) 문자열을 담을 수 있고 변수명 list1으로 설정된 List를 만들어주세요.
	//     (변수 선언 및 초기화를 통한 인스턴스를 만들어주세요)
	// 34) 33번에서 만든 list1에 403호 학생의 이름을 넣어주세요
	// 35) list1에 담긴 이름 전부를 출력해주세요.
	// 36) list1에 담긴 이름들 중, index가 홀수번째인 이름에 '-홀수'라는 텍스트를 추가해주세요.
	//     ex) 홍길동-홀수
	// 37) list1에 담긴 이름들 중, index가 짝수번째이고 index가 5이상인 이름의 '-짝수'라는 텍스트를 추가해주세요.
	//     ex) 홍길동-짝수
	// 38) list1에 index 4번재 학생의 이름을 '홍길동'으로 수정해주세요
	// 39) list1에 index 1번재 학생의 이름을 아무것도 없는 null로 수정해주세요.
	// 40) list1에 들어있는 모든 데이터를 출력해주세요.
	// 41) list1에 들어있는 데이터들 중, index 6번째에 해당하는 학생의 이름을 삭제해주세요.
	// 42) list1에 들어있는 데이터들 중, index 1번째에 해당하는 학생의 이름을 삭제해주세요.
	// 43) list1에 들어있는 데이터들 중, 첫번째 index에 해당하는 학생의 이름을 삭제하고, 마지막 index에 해당하는 학생의 이름을 삭제해주세요.
	// 44) list1에 index 5번재에 새로운 학생의 이름인 '전학생'을 추가해주세요.
	// 45) list1에 index 7번째에 새로운 학생의 이름인 '전학생2'를 추가해주세요.
	// 46) list1에 들어있는 모든 데이터를 출력해주세요.
	
	// Set 문제
	// 47) 숫자를 담을 수 있는 Set을 만들어주세요.
	// 48) 1-9까지의 숫자를 추가해주세요.
	// 49) set에 담긴 모든 데이터를 출력해주세요.
	// 51) set에 담긴 데이터들 중, 짝수 값에 해당하는 값을 출력해주세요. 
	// 51) set에 담긴 데이터들 중, 홀수 값에 해당하는 값을 출력해주세요. 
	// 52) set에 담긴 데이터들 중, 짝수 값에 +10을 더해주세요.
	// 53) set에 담긴 데이터 모두를 다 더한 값을 출력해주세요.
	// 54) set에 담긴 데이터들 중, 홀수 값에 해당하는 데이터를 삭제해주세요.
	// 55) set에 담긴 데이터 모두를 출력해주세요.
	// 56) set에 담긴 데이터들 중, 5-10범위 안에 있는 데이터를 출력해주세요.
	// 57) set에 담긴 데이터의 마지막 데이터를 삭제해주세요.
	// 58) set에 담긴 데이터 모두를 출력해주세요.
	// 59) set에 타입을 문자열을 담을 수 있는 Set으로 생성해주세요.
	// 60) set에 403호 학생 이름 모두를 넣어주세요.
	// 61) set에 넣은 학생이름 모두를 출력해주세요.
	// 62) set에 넣은 학생이름들 중, 본인 이름의 데이터를 '본인'으로 수정해주세요.
	// 63) set에 넣은 학생이름들 중, '김'씨로 시작하는 학생을 출력해주세요.
	// 64) set에 넣은 학생이름들 중, '김'씨로 시작하는 학생 데이터를 삭제해주세요.
	// 65) set에 넣은 학생이름들 중, '본인'을 삭제해주세요.
	// 66) set에 담긴 모든 데이터를 출력해주세요.
	// 67) Set은 인터페이스인가요? 클래스인가요? (출력문으로 출력해주세요.)
	// 68) Set의 종류는 어떤것들이 있나요? (출력문으로 출력해주세요.)
	// 69) 문자열을 담을 수 있고 변수명 set1으로 설정된 Set을 만들어주세요.
	//     (변수선언 및 초기화를 통한 인스턴스를 만들어주세요.)
	// 70) 69번에서 만든 set1에 무지개색깔을 추가해주세요. (한글로)
	// 71) set1에 들어있는 모든 색깔을 출력해주세요.
	// 72) set1에 들어있는 모든 색깔을 출력 시, 파랑 색깔인 경우 'blue'를 출력해주세요.
	// 73) set1에 들어있는 무지개 색깔 중, 빨강색의 값을 'red'로 수정해주세요.
	// 74) set1에 들어있는 무지개 색깔 중, 초록색의 값을 'green'으로 수정해주세요.
	// 75) set1에 들어있는 무지개 색깔 중, 남색, 보라색을 삭제해주세요.
	// 76) set1에 들어있는 모든 색깔을 출력해주세요.
	
	// Map 문제
	// 77) Map은 인터페이스인가요? 클래스인가요? (출력문으로 출력해주세요.)
	// 78) Map의 종류는 어떤것들이 있나요? (출력문으로 출력해주세요.)
	// 79) 문자열을 담음 수 있고 변수명 map1으로 설정된 Map을 만들어주세요.
	// 80) map1에 좋아하는 동물 5마리를 넣어주세요.
	// 81) map1에 좋아하는 동물 5마리 중, 2마리만 꺼내서 출력해주세요.
	// 82) map1에 좋아하는 동물 5마리 중, 첫번째로 넣었던 동물을 '사육사'로 변경해주세요.
	// 83) map1에 들어있는 동물 5마리 중, 좋아하는 우선순위가 가장 낮은 동물을 '본인의 이름'으로 변경해주세요.
	// 84) map1에 들어있는 모든 데이터를 출력해주세요. get() 활용
	// 85) map1에 들어있는 모든 데이터를 keySet()을 이용해서 출력해주세요.
	// 86) BoardVO 클래스를 만들어주세요.
	//     BoardVO 클래스는 총 3가지의 필드를 가지고 있습니다.
	//     글번호 : boNo
	//     글제목 : boTitle
	//     글내용 : boContent
	// 87) BoardVO 타입의 데이터를 넣을 수 있는 Map타입의 변수명 map2를 만들어주세요.
	// 88) map2에 게시글 정보 3개를 넣어주세요.
	// 89) map2에 두번째로 넣은 게시글 정보를 꺼내서 출력해주세요.
	//     글번호 : 2
	//     글제목 : 제목입니다2
	//     글내용 : 내용입니다2
	// 90) map2에 두번재로 넣은 게시글 정보를 삭제해주세요.
	// 91) map2에 들어있는 모든 데이터를 entrySet()을 이용하여 출력해주세요.
	// 92) map2에 첫번째로 넣은 게시글정보의 제목을 "첫번째 게시글입니다"로 수정해주세요.
	// 93) map2에 방금 수정한 게시글 정보를 출력해주세요.
	// 94) map2에 마지막 게시글정보로 넣은 BoardVO의 내용을 '내용을 수정합니다'로 수정해주세요.
	// 95) map2에 마지막 게시글 정보를 출력해주세요.
}
